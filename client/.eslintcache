[{"C:\\Users\\svt\\nodejs-react-coursework\\client\\src\\index.js":"1","C:\\Users\\svt\\nodejs-react-coursework\\client\\src\\App.js":"2","C:\\Users\\svt\\nodejs-react-coursework\\client\\src\\components\\AppRouter.js":"3","C:\\Users\\svt\\nodejs-react-coursework\\client\\src\\routes.js":"4","C:\\Users\\svt\\nodejs-react-coursework\\client\\src\\pages\\Books.js":"5","C:\\Users\\svt\\nodejs-react-coursework\\client\\src\\pages\\Auth.js":"6","C:\\Users\\svt\\nodejs-react-coursework\\client\\src\\pages\\BookPage.js":"7","C:\\Users\\svt\\nodejs-react-coursework\\client\\src\\utils\\consts.js":"8","C:\\Users\\svt\\nodejs-react-coursework\\client\\src\\pages\\Admin.js":"9","C:\\Users\\svt\\nodejs-react-coursework\\client\\src\\books\\UserBooks.js":"10","C:\\Users\\svt\\nodejs-react-coursework\\client\\src\\books\\BooksStore.js":"11","C:\\Users\\svt\\nodejs-react-coursework\\client\\src\\components\\BookList.js":"12","C:\\Users\\svt\\nodejs-react-coursework\\client\\src\\components\\BookItem.js":"13","C:\\Users\\svt\\nodejs-react-coursework\\client\\src\\components\\modals\\CreateBook.js":"14","C:\\Users\\svt\\nodejs-react-coursework\\client\\src\\components\\modals\\CreateBox.js":"15","C:\\Users\\svt\\nodejs-react-coursework\\client\\src\\http\\userApi.js":"16","C:\\Users\\svt\\nodejs-react-coursework\\client\\src\\http\\index.js":"17","C:\\Users\\svt\\nodejs-react-coursework\\client\\src\\pages\\Contacts.js":"18","C:\\Users\\svt\\nodejs-react-coursework\\client\\src\\pages\\About.js":"19","C:\\Users\\svt\\nodejs-react-coursework\\client\\src\\pages\\Boxes.js":"20","C:\\Users\\svt\\nodejs-react-coursework\\client\\src\\components\\BoxItem.js":"21","C:\\Users\\svt\\nodejs-react-coursework\\client\\src\\components\\modals\\ReceiveBox.js":"22","C:\\Users\\svt\\nodejs-react-coursework\\client\\src\\http\\bookAPI.js":"23","C:\\Users\\svt\\nodejs-react-coursework\\client\\src\\components\\modals\\ChangeBook.js":"24","C:\\Users\\svt\\nodejs-react-coursework\\client\\src\\components\\NavBar\\NavBar.js":"25","C:\\Users\\svt\\nodejs-react-coursework\\client\\src\\components\\NavBar\\nav_components\\trueAuth.js":"26","C:\\Users\\svt\\nodejs-react-coursework\\client\\src\\components\\NavBar\\nav_components\\falseAuth.js":"27","C:\\Users\\svt\\nodejs-react-coursework\\client\\src\\components\\Apps.js":"28","C:\\Users\\svt\\nodejs-react-coursework\\client\\src\\pages\\Applications.js":"29"},{"size":571,"mtime":1652199564997,"results":"30","hashOfConfig":"31"},{"size":1180,"mtime":1652620605901,"results":"32","hashOfConfig":"31"},{"size":1448,"mtime":1652021374044,"results":"33","hashOfConfig":"31"},{"size":1204,"mtime":1652641498727,"results":"34","hashOfConfig":"31"},{"size":835,"mtime":1652629649866,"results":"35","hashOfConfig":"31"},{"size":3298,"mtime":1652133487566,"results":"36","hashOfConfig":"31"},{"size":4100,"mtime":1652626465748,"results":"37","hashOfConfig":"31"},{"size":356,"mtime":1652641387721,"results":"38","hashOfConfig":"31"},{"size":1501,"mtime":1652293918932,"results":"39","hashOfConfig":"31"},{"size":844,"mtime":1652622848124,"results":"40","hashOfConfig":"31"},{"size":1288,"mtime":1652642580788,"results":"41","hashOfConfig":"31"},{"size":490,"mtime":1652103220734,"results":"42","hashOfConfig":"31"},{"size":1133,"mtime":1652643598620,"results":"43","hashOfConfig":"31"},{"size":3272,"mtime":1652625151094,"results":"44","hashOfConfig":"31"},{"size":1419,"mtime":1652298821879,"results":"45","hashOfConfig":"31"},{"size":1342,"mtime":1652133657736,"results":"46","hashOfConfig":"31"},{"size":883,"mtime":1652131042204,"results":"47","hashOfConfig":"31"},{"size":280,"mtime":1652187907668,"results":"48","hashOfConfig":"31"},{"size":271,"mtime":1652187923880,"results":"49","hashOfConfig":"31"},{"size":322,"mtime":1652198474083,"results":"50","hashOfConfig":"31"},{"size":3492,"mtime":1652198721105,"results":"51","hashOfConfig":"31"},{"size":3411,"mtime":1652453075430,"results":"52","hashOfConfig":"31"},{"size":2884,"mtime":1652642287071,"results":"53","hashOfConfig":"31"},{"size":3576,"mtime":1652555761071,"results":"54","hashOfConfig":"31"},{"size":2811,"mtime":1652623285501,"results":"55","hashOfConfig":"31"},{"size":1591,"mtime":1652641324251,"results":"56","hashOfConfig":"31"},{"size":476,"mtime":1652620929347,"results":"57","hashOfConfig":"31"},{"size":1993,"mtime":1652642570425,"results":"58","hashOfConfig":"31"},{"size":1065,"mtime":1652642897303,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"6tvyi4",{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"62"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"62"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"62"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"62"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"62"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"62"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"62"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"62"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"62"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"62"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"62"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"62"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"62"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"62"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131","usedDeprecatedRules":"62"},{"filePath":"132","messages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"62"},"C:\\Users\\svt\\nodejs-react-coursework\\client\\src\\index.js",[],["135","136"],"C:\\Users\\svt\\nodejs-react-coursework\\client\\src\\App.js",["137"],"import { observer } from 'mobx-react-lite';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { BrowserRouter } from \"react-router-dom\";\nimport AppRouter from \"./components/AppRouter\";\nimport NavBar from \"./components/NavBar/NavBar\";\nimport { Context } from \"./index\";\nimport { check } from './http/userApi';\nimport { Spinner } from 'react-bootstrap';\n\nconst App = observer(() => {\n  const { user } = useContext(Context)\n  const [loading, setLoading] = useState(true)// отвечает за то, идет ли загрузка страницы\n  // отправляем запрос только один раз при первом открытии приложения\n  useEffect(() => {\n    check().then(data => {\n      user.setUser(true)\n      user.setIsAuth(true)\n    }).finally(() => setLoading(false)) // если масив записимостей пустой, то функция отработает единожды при первом запуске\n  }, [])\n\n  if (loading) {\n    return <Spinner animation={\"grow\"} />\n  }\n  return (\n    <BrowserRouter>\n      <NavBar />\n      <AppRouter />\n    </BrowserRouter>\n  );\n});\n\nexport default App;\n\n","C:\\Users\\svt\\nodejs-react-coursework\\client\\src\\components\\AppRouter.js",[],"C:\\Users\\svt\\nodejs-react-coursework\\client\\src\\routes.js",[],"C:\\Users\\svt\\nodejs-react-coursework\\client\\src\\pages\\Books.js",["138","139"],"import { observer } from 'mobx-react-lite';\r\nimport React, { useContext, useEffect } from 'react';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport { Context } from '..';\r\nimport BookList from '../components/BookList';\r\nimport { fetchBoooks } from '../http/bookAPI';\r\n//import { fetchBooks } from '../http/boxAPI';\r\n\r\nconst Books = observer(() => {\r\n    const {user, book} = useContext(Context)\r\n    //единожды при откртии страницы с книгами подгружаем массив\r\n    useEffect(() => {\r\n        fetchBoooks().then(data => book.setBooks(data.rows))\r\n    }, [])\r\n    return (\r\n        <Container>\r\n            <Row>\r\n                <Col>\r\n                    <BookList/>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default Books;","C:\\Users\\svt\\nodejs-react-coursework\\client\\src\\pages\\Auth.js",["140"],"import { observer } from 'mobx-react-lite';\r\nimport React, { useContext, useState } from 'react';\r\nimport { Card, Container, Form, Button, Row } from 'react-bootstrap';\r\nimport { NavLink, useHistory, useLocation } from 'react-router-dom';\r\nimport { Context } from '../index';\r\nimport { login, registration } from \"../http/userApi\";\r\nimport { BOOKS_ROUTE, LOGIN_ROUTE, REGISTRATION_ROUTE } from \"../utils/consts\";\r\n\r\nconst Auth = observer(() => {\r\n    const {user} = useContext(Context)\r\n    const location = useLocation() // получаем маршрут в строке запроса\r\n    const history = useHistory()\r\n    const isLogin = location.pathname === LOGIN_ROUTE // истина в случае совпадения маршрута с LOGIN_ROUTE\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const click = async () => {\r\n        try {\r\n            let data;\r\n            if(isLogin){\r\n                data = await login(email, password);\r\n            } else {\r\n                data = await registration(email, password);\r\n            }\r\n            user.setUser(user)\r\n            user.setIsAuth(true)\r\n            history.push(BOOKS_ROUTE) // если функция успешна редирект на главную страницу\r\n        } catch (e) {\r\n            alert(e.response.data.message)\r\n        }\r\n        \r\n        \r\n    }\r\n    return (\r\n        <Container className=\"d-flex justify-content-center align-items-center\"\r\n        style={{height: window.innerHeight - 54}}\r\n        >\r\n            <Card style={{width: 600}} className=\"p-5\">\r\n                <h2 className=\"m-auto\">{isLogin ? 'Авторизация' : 'Регистрация'}</h2>\r\n                <Form className=\"d-flex flex-column\">\r\n                    <Form.Control \r\n                        className=\"mt-3\"\r\n                        placeholder=\"Введите E-mail\"\r\n                        value={email}\r\n                        onChange={e => setEmail(e.target.value)}\r\n                    />\r\n                     <Form.Control \r\n                        className=\"mt-3\"\r\n                        placeholder=\"Введите пароль\"\r\n                        value={password}\r\n                        onChange={e => setPassword(e.target.value)}\r\n                        type=\"password\"\r\n                    />\r\n                </Form>\r\n                <Row className=\"d-flex justify-content-between mt-3 pl-3 pr-3\">\r\n                    {isLogin ?\r\n                        <div>\r\n                            Нет аккаунта? <NavLink to={REGISTRATION_ROUTE}>Зарегистрироваться!</NavLink>\r\n                        </div>\r\n                        :\r\n                        <div>\r\n                            Есть аккаунт? <NavLink to={LOGIN_ROUTE}>Войдите!</NavLink>\r\n                        </div>\r\n                    }\r\n                    <Button  \r\n                        variant={\"outline-success\"}\r\n                        onClick={click}\r\n                        >\r\n                        {isLogin ? 'Войти' : 'Регистрация'} \r\n                    </Button>\r\n                </Row>\r\n            </Card>\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default Auth;","C:\\Users\\svt\\nodejs-react-coursework\\client\\src\\pages\\BookPage.js",["141"],"import React, { useContext, useEffect, useState } from 'react';\r\nimport { Button, Col, Container, Row, Table } from 'react-bootstrap';\r\nimport Image from 'react-bootstrap/Image';\r\nimport { useHistory, useParams } from 'react-router-dom';\r\nimport { deleteBook, fetchOneBoook } from '../http/bookAPI';\r\nimport { BOOKS_ROUTE } from '../utils/consts';\r\nimport ChangeBook from '../components/modals/ChangeBook';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Context } from '..';\r\n\r\nconst BookPage = observer(() => {\r\n    const [book, setBooks] = useState(true) // с помощью хука создаем локальное состояние\r\n    const history = useHistory() // динамическое передвижение по страницам\r\n    const {user} = useContext(Context);\r\n    \r\n    //получаем параметры строки запроса\r\n    const { id } = useParams()\r\n    const [bookChangeVisible, setBookChangeVisible] = useState(false)\r\n    //подргруажем единожды книгу\r\n    useEffect(() => {\r\n        fetchOneBoook(id).then(data => setBooks(data))\r\n    }, [])\r\n\r\n    const onDeleteBook = () => {\r\n        deleteBook(id).then(() => {\r\n            history.push(BOOKS_ROUTE);\r\n        })\r\n    };\r\n\r\n    return (\r\n        <Container className=\"mt-3\">\r\n            <Row>\r\n                <Col md={4}>\r\n                    <Image width={300} height={400} src={process.env.REACT_APP_API_URL + book.img} />\r\n                </Col>\r\n                <Col md={8}>\r\n                    <Row>\r\n                        <div\r\n                            className=\"d-flex flex-column\"\r\n                        >\r\n                            <h2>{book.title}</h2>\r\n                            {user.isAuth && <Button\r\n                                variant={\"outline-success\"}\r\n                                className=\"mb-3\"\r\n                                onClick={() => setBookChangeVisible(true)}\r\n                            >\r\n                                Редактировать книгу\r\n                            </Button> }\r\n                            \r\n                            {user.isAuth && <Button\r\n                                variant={\"outline-danger\"}\r\n                                onClick={() => onDeleteBook(id)}\r\n                            >\r\n                                Удалить книгу\r\n                            </Button> }\r\n                            <br/>\r\n                            <Table striped bordered hover>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>#</th>\r\n                                        <th>Количество</th>\r\n                                        <th>Стоимость</th>\r\n\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>1</td>\r\n                                        <td>30 шт.</td>\r\n                                        <td>{book.price * 30} Руб</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>2</td>\r\n                                        <td>50 шт.</td>\r\n                                        <td>{book.price * 50} Руб</td>\r\n\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>3</td>\r\n                                        <td>100 шт.</td>\r\n                                        <td>{book.price * 100} Руб</td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </Table>\r\n                        </div>\r\n                    </Row>\r\n                </Col>\r\n                <ChangeBook show={bookChangeVisible} onHide={() => setBookChangeVisible(false)}/>\r\n            </Row>\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default BookPage;","C:\\Users\\svt\\nodejs-react-coursework\\client\\src\\utils\\consts.js",[],"C:\\Users\\svt\\nodejs-react-coursework\\client\\src\\pages\\Admin.js",[],"C:\\Users\\svt\\nodejs-react-coursework\\client\\src\\books\\UserBooks.js",[],"C:\\Users\\svt\\nodejs-react-coursework\\client\\src\\books\\BooksStore.js",[],"C:\\Users\\svt\\nodejs-react-coursework\\client\\src\\components\\BookList.js",[],"C:\\Users\\svt\\nodejs-react-coursework\\client\\src\\components\\BookItem.js",[],"C:\\Users\\svt\\nodejs-react-coursework\\client\\src\\components\\modals\\CreateBook.js",["142"],"import { observer } from \"mobx-react-lite\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport { Form, Modal } from \"react-bootstrap\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { Context } from \"../..\";\r\nimport { createBook } from \"../../http/bookAPI\";\r\n\r\nconst CreateBook = observer(({ show, onHide }) => {\r\n    const {book} = useContext(Context)\r\n    // создаем состояние для каждого инпута\r\n    const [title, setTitle] = useState('')\r\n    const [quantity, setQuantity] = useState()\r\n    const [price, setPrice] = useState('')\r\n    const [img, setImg] = useState(null)\r\n    \r\n    //функция выбора файла, будет вызываться в том случае, когда выбран файл на пк\r\n    const selectFile = e => {\r\n        setImg(e.target.files[0])\r\n    } \r\n    \r\n    //добавление новой книги в БД\r\n    const addBook = () => {\r\n        const formData = new FormData()\r\n        formData.append('title', title)\r\n        formData.append('quantity', quantity)\r\n        formData.append('price', price)\r\n        formData.append('img', img)\r\n        createBook(formData).then(data => onHide()) // если запрос прошел успешно - закрываем модальное окна\r\n    }\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            onHide={onHide}\r\n            size=\"lg\"\r\n            centered\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Добавить книгу\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form>\r\n                    <Form.Control\r\n                        value={title}\r\n                        onChange={e => setTitle(e.target.value)}\r\n                        className=\"mt-3\"\r\n                        placeholder=\"Введите название и автора книги\"\r\n                    />\r\n                    <Form.Control\r\n                        value={quantity}\r\n                        onChange={e => setQuantity(Number(e.target.value))}\r\n                        className=\"mt-3\"\r\n                        placeholder=\"Введите количество\"\r\n                        type=\"number\"\r\n                    />\r\n                    <Form.Control\r\n                        value={price}\r\n                        onChange={e => setPrice(e.target.value)}\r\n                        className=\"mt-3\"\r\n                        placeholder=\"Введите стоимость\"\r\n                    />\r\n                    <Form.Control\r\n                        className=\"mt-3\"\r\n                        placeholder=\"Выберите обложку\"\r\n                        type=\"file\"\r\n                        onChange={selectFile}\r\n                    />\r\n                    <hr/>\r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\r\n                <Button variant=\"outline-success\" onClick={addBook}>Добавить</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n});\r\n\r\nexport default CreateBook;","C:\\Users\\svt\\nodejs-react-coursework\\client\\src\\components\\modals\\CreateBox.js",["143","144","145","146","147","148","149"],"import React, { useContext, useState } from \"react\";\r\nimport { Form, Modal } from \"react-bootstrap\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { Context } from \"../..\";\r\n\r\nconst CreateBox = ({ show, onHide }) => {\r\n    const {box} = useContext(Context)\r\n    // создаем состояние для каждого инпута\r\n    const [box_size, setSize] = useState('')\r\n    //const [availability, setQuantity] = useState(0)\r\n    const [price, setPrice] = useState('0')\r\n    const [location, setLocation] = useState(null)\r\n\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            onHide={onHide}\r\n            size=\"lg\"\r\n            centered\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Добавить бокс\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form>\r\n                    <Form.Control\r\n                        placeholder={\"Введите бокс\"}\r\n                    />\r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\r\n                <Button variant=\"outline-success\" onClick={onHide}>Добавить</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default CreateBox;","C:\\Users\\svt\\nodejs-react-coursework\\client\\src\\http\\userApi.js",[],"C:\\Users\\svt\\nodejs-react-coursework\\client\\src\\http\\index.js",[],"C:\\Users\\svt\\nodejs-react-coursework\\client\\src\\pages\\Contacts.js",["150","151"],"import React, { useState } from 'react';\r\nimport { Button, Container } from 'react-bootstrap';\r\n\r\n\r\nconst Contacts = () => {\r\n    \r\n    return (\r\n        <Container className=\"d-flex flex-column\">\r\n            Contacts\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Contacts;","C:\\Users\\svt\\nodejs-react-coursework\\client\\src\\pages\\About.js",["152","153"],"import React, { useState } from 'react';\r\nimport { Button, Container } from 'react-bootstrap';\r\n\r\n\r\nconst About = () => {\r\n    \r\n    return (\r\n        <Container className=\"d-flex flex-column\">\r\n            About\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default About;","C:\\Users\\svt\\nodejs-react-coursework\\client\\src\\pages\\Boxes.js",["154","155"],"import React, { useState } from 'react';\r\nimport { Button, Container } from 'react-bootstrap';\r\nimport BoxItem from '../components/BoxItem';\r\n\r\nconst Boxes = () => {\r\n\r\n    return (\r\n        <Container className=\"d-flex flex-column mt-5\">\r\n            <BoxItem />\r\n        </Container>\r\n    );\r\n};\r\n\r\nexport default Boxes;","C:\\Users\\svt\\nodejs-react-coursework\\client\\src\\components\\BoxItem.js",[],"C:\\Users\\svt\\nodejs-react-coursework\\client\\src\\components\\modals\\ReceiveBox.js",["156"],"import { observer } from \"mobx-react-lite\";\r\nimport React, { useContext, useEffect, useState } from \"react\";\r\nimport { Dropdown, Form, Modal } from \"react-bootstrap\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport DropdownMenu from \"react-bootstrap/esm/DropdownMenu\";\r\nimport { Context } from \"../..\";\r\nimport { createBox, fetchBoxes } from \"../../http/bookAPI\";\r\n\r\nconst ReceiveBox = observer(({ show, onHide }) => {\r\n    const {book} = useContext(Context)\r\n    // const [box_size, setBoxSize] = useState(null)\r\n    // const [location, setBoxLocation] = useState(null)\r\n    const [fio, setFIO] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    //console.log(\"Локация: \" + location)\r\n    useEffect(() => {\r\n        fetchBoxes().then(data => book.setBoxes(data))\r\n    }, [])\r\n\r\n    //добавляем запись в бд\r\n    const addBox = () => {\r\n        const formData = new FormData()\r\n        formData.append('fio', fio)\r\n        formData.append('email', email)\r\n        formData.append('boxId', book)\r\n        createBox()\r\n    }\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            onHide={onHide}\r\n            size=\"lg\"\r\n            centered\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Заказ бокса\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form>\r\n                   <Dropdown className=\"mt-2 mb-2\">\r\n                        <Dropdown.Toggle>{book.selectedBox.box_size || \"Выберите размер\"}</Dropdown.Toggle>\r\n                        <DropdownMenu>\r\n                            {book.boxes.map(box =>\r\n                                <Dropdown.Item onClick={() => book.setSelectedBox(box)} key={box.id}>{box.box_size}</Dropdown.Item>\r\n                            )}\r\n                        </DropdownMenu>\r\n                   </Dropdown>\r\n                   <Dropdown className=\"mt-2 mb-2\">\r\n                        <Dropdown.Toggle>{book.selectedBox.location || \"Выберите локацию\"}</Dropdown.Toggle>\r\n                        <DropdownMenu>\r\n                            {book.boxes.map(box =>\r\n                                <Dropdown.Item onClick={() => book.setSelectedBox(box)} key={box.id}>{box.location}</Dropdown.Item>\r\n                            )}\r\n                        </DropdownMenu>\r\n                   </Dropdown>\r\n                   <Form.Control\r\n                        value={fio}\r\n                        onChange={e => setFIO(e.target.value)}\r\n                        className=\"mt-3\"\r\n                        placeholder=\"Введите Ваше ФИО\"\r\n                   />\r\n                   <Form.Control\r\n                        value={email}\r\n                        onChange={e => setEmail(e.target.value)}\r\n                        className=\"mt-3\"\r\n                        placeholder=\"Введите Ваш E-mail\"\r\n                        type=\"email\"\r\n                   />\r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\r\n                <Button variant=\"outline-success\" onClick={addBox}>Добавить</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n});\r\n\r\nexport default ReceiveBox;","C:\\Users\\svt\\nodejs-react-coursework\\client\\src\\http\\bookAPI.js",["157"],"//реализация функций регистрации/авторизации и проверки токена на валидность\r\n\r\nimport { $authHost, $host } from \"./index\"; \r\nimport jwt_decode from \"jwt-decode\";\r\n\r\nexport const createBox = async (box) => {\r\n    // помещаем ответ, который будет возвращаться от сервера\r\n    const {data} = await $authHost.post('api/boxes', box)\r\n    return data\r\n}\r\n\r\nexport const fetchBoxes = async () => {\r\n    // помещаем ответ, который будет возвращаться от сервера\r\n    const {data} = await $host.get('api/boxes')\r\n    return data\r\n}\r\n\r\nexport const createBook = async (book) => {\r\n    // помещаем ответ, который будет возвращаться от сервера\r\n    const {data} = await $authHost.post('api/book', book)\r\n    return data\r\n}\r\n\r\nexport const updateBook = async (id, body) => {\r\n    // помещаем ответ, который будет возвращаться от сервера\r\n    const {data} = await $authHost({method:'PUT', url:`api/book/${id}`, data: body});\r\n    return data\r\n}\r\n\r\nexport const deleteBook = async (id) => {\r\n    // помещаем ответ, который будет возвращаться от сервера\r\n    const {data} = await $authHost({method:'DELETE', url:'api/book/'+id})\r\n    return data\r\n}\r\n\r\nexport const fetchBoooks = async () => {\r\n    // помещаем ответ, который будет возвращаться от сервера\r\n    const {data} = await $host.get('api/book')\r\n    return data\r\n}\r\n\r\nexport const fetchOneBoook = async (id) => {\r\n    // помещаем ответ, который будет возвращаться от сервера\r\n    const {data} = await $host.get('api/book/' + id)\r\n    return data\r\n}\r\n\r\nexport const createApplication = async (application) => {\r\n    // помещаем ответ, который будет возвращаться от сервера\r\n    const {data} = await $host.post('api/applications', application)\r\n    return data\r\n}\r\n\r\nexport const fetchApplications = async () => {\r\n    // помещаем ответ, который будет возвращаться от сервера\r\n    const {data} = await $host.get('api/applications')\r\n    return data\r\n}\r\n\r\n// export const createApplication = async (book) => {\r\n//     // помещаем ответ, который будет возвращаться от сервера\r\n//     const {data} = await $authHost.post('api/application', box)\r\n//     return data\r\n// }\r\n\r\n// export const fetchApplications = async () => {\r\n//     // помещаем ответ, который будет возвращаться от сервера\r\n//     const {data} = await $host.get('api/applications')\r\n//     return data\r\n// }\r\n","C:\\Users\\svt\\nodejs-react-coursework\\client\\src\\components\\modals\\ChangeBook.js",["158","159","160"],"import { observer } from \"mobx-react-lite\";\r\nimport React, { useContext, useState } from \"react\";\r\nimport { Form, Modal } from \"react-bootstrap\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { Context } from \"../..\";\r\nimport { updateBook } from \"../../http/bookAPI\";\r\nimport { BOOKPAGE_ROUTE } from \"../../utils/consts\";\r\n\r\nconst ChangeBook = observer(({ show, onHide }) => {\r\n    const {book} = useContext(Context)\r\n    const {id} = useParams();\r\n    const history = useHistory() // динамическое передвижение по страницам\r\n    // создаем состояние для каждого инпута\r\n    const [title, setTitle] = useState('')\r\n    const [quantity, setQuantity] = useState()\r\n    const [price, setPrice] = useState('')\r\n    const [img, setImg] = useState(null)\r\n    \r\n    //функция выбора файла, будет вызываться в том случае, когда выбран файл на пк\r\n    const selectFile = e => {\r\n        setImg(e.target.files[0])\r\n    } \r\n    \r\n    //добавление новой книги в БД\r\n    const changeBook = () => {\r\n        const formData = new FormData()\r\n        formData.append('title', title)\r\n        formData.append('quantity', quantity)\r\n        formData.append('price', price)\r\n        formData.append('img', img)\r\n        updateBook(id, formData).then(data => onHide()) // если запрос прошел успешно - закрываем модальное окна\r\n    }\r\n    return (\r\n        <Modal\r\n            show={show}\r\n            onHide={onHide}\r\n            size=\"lg\"\r\n            centered\r\n        >\r\n            <Modal.Header closeButton>\r\n                <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Редактировать книгу\r\n                </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n                <Form>\r\n                   ID  {id}\r\n                    <Form.Control\r\n                        value={title}\r\n                        onChange={e => setTitle(e.target.value)}\r\n                        className=\"mt-3\"\r\n                        placeholder=\"Введите название и автора книги\"\r\n                    />\r\n                    <Form.Control\r\n                        value={quantity}\r\n                        onChange={e => setQuantity(Number(e.target.value))}\r\n                        className=\"mt-3\"\r\n                        placeholder=\"Введите количество\"\r\n                        type=\"number\"\r\n                    />\r\n                    <Form.Control\r\n                        value={price}\r\n                        onChange={e => setPrice(e.target.value)}\r\n                        className=\"mt-3\"\r\n                        placeholder=\"Введите стоимость\"\r\n                    />\r\n                    <Form.Control\r\n                        className=\"mt-3\"\r\n                        placeholder=\"Выберите обложку\"\r\n                        type=\"file\"\r\n                        onChange={selectFile}\r\n                    />\r\n                    <hr/>\r\n                </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n                <Button variant=\"outline-danger\" onClick={onHide}>Закрыть</Button>\r\n                <Button variant=\"outline-success\" onClick={changeBook}>Изменить</Button>\r\n            </Modal.Footer>\r\n        </Modal>\r\n    );\r\n});\r\n\r\nexport default ChangeBook;","C:\\Users\\svt\\nodejs-react-coursework\\client\\src\\components\\NavBar\\NavBar.js",["161","162","163","164"],"import React, { useContext } from 'react';\r\nimport { Context } from '../../index';\r\nimport Navbar from \"react-bootstrap/Navbar\"\r\nimport Nav from \"react-bootstrap/Nav\"\r\nimport Container from \"react-bootstrap/Container\"\r\nimport { NavLink } from 'react-router-dom';\r\nimport { ABOUT_ROUTE, ADMIN_ROUTE, BOOKS_ROUTE, BOXES_ROUTE, CONTACTS_ROUTE, LOGIN_ROUTE } from '../../utils/consts';\r\nimport { Button } from \"react-bootstrap\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport TrueAuth from './nav_components/trueAuth';\r\nimport FalseAuth from './nav_components/falseAuth';\r\n\r\nconst NavBar = observer(() => {\r\n    const { user } = useContext(Context) // в зависимости от того, авторизован пользователь - navbar будет отображаться по разному\r\n    \r\n    return (\r\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"danger\" variant=\"light\">\r\n            <Container>\r\n                <NavLink style={{ color: 'white', fontSize: '20px'}} to={BOOKS_ROUTE}>SafeBooks</NavLink>\r\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                    <Nav className=\"mr-auto pl-5\">\r\n                        <NavLink style={{ color: 'white', display: 'block', marginLeft: '20px' }} to={BOXES_ROUTE}>Заказать бокс</NavLink>\r\n                        <NavLink style={{ color: 'white', display: 'block', marginLeft: '20px'}} to={ABOUT_ROUTE}>О сайте</NavLink>\r\n                        <NavLink style={{ color: 'white', display: 'block', marginLeft: '20px'}} to={CONTACTS_ROUTE}>Контакты</NavLink>\r\n                    </Nav>\r\n                    <Nav>\r\n                        {user.isAuth ? <TrueAuth/> : <FalseAuth/>}\r\n                    </Nav>\r\n                </Navbar.Collapse>\r\n            </Container>\r\n        </Navbar>\r\n\r\n\r\n\r\n\r\n        // <Navbar bg=\"info\" variant=\"light\">\r\n        //     <Container>\r\n        //     <NavLink style={{color:'white'}} to={BOOKS_ROUTE}>SafeBooks</NavLink>\r\n        //     {user.isAuth ? <Nav className=\"ml-auto\" style={{color:'white'}}>\r\n        //         <Button variant={\"outline-light\"} onClick={() => history.push(ADMIN_ROUTE)}>Админ панель</Button>\r\n        //         <Button variant={\"outline-light\"} onClick={() => history.push(LOGIN_ROUTE)} className=\"ml-2\">Выйти</Button>\r\n        //     </Nav>\r\n        //     :\r\n        //     <Nav className=\"ml-auto\" style={{color:'white'}}>\r\n\r\n        //         <Button variant={\"outline-light\"} onClick={() => user.setIsAuth(true)}>Авторизация</Button>\r\n        //     </Nav>\r\n        //     }\r\n        //     </Container>\r\n        // </Navbar>\r\n    );\r\n});\r\n\r\nexport default NavBar","C:\\Users\\svt\\nodejs-react-coursework\\client\\src\\components\\NavBar\\nav_components\\trueAuth.js",["165","166"],"import {Button, Nav} from \"react-bootstrap\";\r\nimport React, {useContext, useState} from \"react\";\r\nimport {Context} from \"../../../index\";\r\nimport CreateBook from \"../../modals/CreateBook\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { APPLICATIONS_ROUTE } from \"../../../utils/consts\";\r\n\r\n\r\nconst TrueAuth = () => {\r\n    const {user} = useContext(Context);\r\n    const history = useHistory()\r\n    const [bookVisible, setBookVisible] = useState(false)\r\n    const [boxVisible, setBoxVisible] = useState(false)\r\n\r\n    const logOut = () => {\r\n        user.setUser({});\r\n        user.setIsAuth(false);\r\n        localStorage.removeItem('token');\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Nav className=\"ml-auto\" style={{color: \"white\"}}>\r\n            {user.isAuth && <Button\r\n                className={\"mr-2\"}\r\n                variant={\"outline-light\"}\r\n                onClick={() => {setBookVisible(true)}}\r\n            >\r\n                Добавить книгу\r\n            </Button>}\r\n            {user.isAuth && <Button\r\n                className={\"mr-2\"}\r\n                variant={\"outline-light\"}\r\n                onClick={() => history.push(APPLICATIONS_ROUTE)}\r\n            >\r\n                Заказы\r\n            </Button>}\r\n\r\n            <Button\r\n                variant={\"outline-light\"}\r\n                className=\"ml-2\"\r\n                onClick={() => logOut()}\r\n            >\r\n                Выйти\r\n            </Button>\r\n            <CreateBook show={bookVisible} onHide={() => setBookVisible(false)}/>\r\n        </Nav>\r\n    );\r\n};\r\n\r\nexport default TrueAuth;","C:\\Users\\svt\\nodejs-react-coursework\\client\\src\\components\\NavBar\\nav_components\\falseAuth.js",[],"C:\\Users\\svt\\nodejs-react-coursework\\client\\src\\components\\Apps.js",["167"],"import { observer } from 'mobx-react-lite';\r\nimport React, { useContext } from 'react';\r\nimport { Table } from 'react-bootstrap';\r\nimport { Context } from '..';\r\nimport Applications from '../pages/Applications';\r\n\r\nconst Apps = observer(() => {\r\n    const { book } = useContext(Context) // получаем bookStore, c помощью хука\r\n    return (\r\n        <Table responsive>\r\n            <thead>\r\n                <tr>\r\n                    <th>#</th>\r\n                    <th>ФИО</th>\r\n                    <th>Размер бокса</th>\r\n                    <th>Расположение бокса</th>\r\n                    <th>E-mail пользователя</th>\r\n\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {book.applications.map(application =>\r\n                    <tr>\r\n                        <td>{application.id}</td>\r\n                        <td>{application.completed}</td>\r\n                        <td>Table cell</td>\r\n                        <td>Table cell</td>\r\n                        <td>Table cell</td>\r\n                    </tr>\r\n                )}\r\n                {/* <tr>\r\n                    <td>1</td>\r\n                    <td>Table cell</td>\r\n                    <td>Table cell</td>\r\n                    <td>Table cell</td>\r\n                    <td>Table cell</td>\r\n                    \r\n                </tr>\r\n                <tr>\r\n                    <td>2</td>\r\n                    <td>Table cell</td>\r\n                    <td>Table cell</td>\r\n                    <td>Table cell</td>\r\n                    <td>Table cell</td>\r\n                    \r\n                </tr>\r\n                <tr>\r\n                    <td>3</td>\r\n                    <td>Table cell</td>\r\n                    <td>Table cell</td>\r\n                    <td>Table cell</td>\r\n                    <td>Table cell</td>\r\n                    \r\n                </tr> */}\r\n            </tbody>\r\n        </Table>\r\n    );\r\n});\r\n\r\nexport default Apps;","C:\\Users\\svt\\nodejs-react-coursework\\client\\src\\pages\\Applications.js",["168"],"import { observer } from 'mobx-react-lite';\r\nimport { useContext, useEffect } from 'react';\r\n// import React, { useContext, useEffect } from 'react';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport { Context } from '..';\r\n// import { Context } from '..';\r\nimport Apps from '../components/Apps';\r\nimport { fetchApplications } from '../http/bookAPI';\r\n// import { fetchApplications } from '../http/bookAPI';\r\n\r\nconst Applications = observer(() => {\r\n    const {book} = useContext(Context)\r\n    //единожды при откртии страницы с книгами подгружаем массив\r\n    useEffect(() => {\r\n        fetchApplications().then(data => book.setApplications(data))\r\n    }, [])\r\n    return (\r\n        <Container className=\"d-flex flex-column mt-5\">\r\n            <Row>\r\n                <Col>\r\n                    <h2 className=\"text-center\">Заказы посетителей</h2>\r\n                    <Apps/>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n});\r\n\r\nexport default Applications;",{"ruleId":"169","replacedBy":"170"},{"ruleId":"171","replacedBy":"172"},{"ruleId":"173","severity":1,"message":"174","line":19,"column":6,"nodeType":"175","endLine":19,"endColumn":8,"suggestions":"176"},{"ruleId":"177","severity":1,"message":"178","line":10,"column":12,"nodeType":"179","messageId":"180","endLine":10,"endColumn":16},{"ruleId":"173","severity":1,"message":"181","line":14,"column":8,"nodeType":"175","endLine":14,"endColumn":10,"suggestions":"182"},{"ruleId":"177","severity":1,"message":"183","line":22,"column":17,"nodeType":"179","messageId":"180","endLine":22,"endColumn":21},{"ruleId":"173","severity":1,"message":"184","line":22,"column":8,"nodeType":"175","endLine":22,"endColumn":10,"suggestions":"185"},{"ruleId":"177","severity":1,"message":"186","line":9,"column":12,"nodeType":"179","messageId":"180","endLine":9,"endColumn":16},{"ruleId":"177","severity":1,"message":"187","line":7,"column":12,"nodeType":"179","messageId":"180","endLine":7,"endColumn":15},{"ruleId":"177","severity":1,"message":"188","line":9,"column":12,"nodeType":"179","messageId":"180","endLine":9,"endColumn":20},{"ruleId":"177","severity":1,"message":"189","line":9,"column":22,"nodeType":"179","messageId":"180","endLine":9,"endColumn":29},{"ruleId":"177","severity":1,"message":"190","line":11,"column":12,"nodeType":"179","messageId":"180","endLine":11,"endColumn":17},{"ruleId":"177","severity":1,"message":"191","line":11,"column":19,"nodeType":"179","messageId":"180","endLine":11,"endColumn":27},{"ruleId":"177","severity":1,"message":"192","line":12,"column":12,"nodeType":"179","messageId":"180","endLine":12,"endColumn":20},{"ruleId":"177","severity":1,"message":"193","line":12,"column":22,"nodeType":"179","messageId":"180","endLine":12,"endColumn":33},{"ruleId":"177","severity":1,"message":"194","line":1,"column":17,"nodeType":"179","messageId":"180","endLine":1,"endColumn":25},{"ruleId":"177","severity":1,"message":"195","line":2,"column":10,"nodeType":"179","messageId":"180","endLine":2,"endColumn":16},{"ruleId":"177","severity":1,"message":"194","line":1,"column":17,"nodeType":"179","messageId":"180","endLine":1,"endColumn":25},{"ruleId":"177","severity":1,"message":"195","line":2,"column":10,"nodeType":"179","messageId":"180","endLine":2,"endColumn":16},{"ruleId":"177","severity":1,"message":"194","line":1,"column":17,"nodeType":"179","messageId":"180","endLine":1,"endColumn":25},{"ruleId":"177","severity":1,"message":"195","line":2,"column":10,"nodeType":"179","messageId":"180","endLine":2,"endColumn":16},{"ruleId":"173","severity":1,"message":"181","line":18,"column":8,"nodeType":"175","endLine":18,"endColumn":10,"suggestions":"196"},{"ruleId":"177","severity":1,"message":"197","line":4,"column":8,"nodeType":"179","messageId":"180","endLine":4,"endColumn":18},{"ruleId":"177","severity":1,"message":"198","line":8,"column":10,"nodeType":"179","messageId":"180","endLine":8,"endColumn":24},{"ruleId":"177","severity":1,"message":"186","line":11,"column":12,"nodeType":"179","messageId":"180","endLine":11,"endColumn":16},{"ruleId":"177","severity":1,"message":"199","line":13,"column":11,"nodeType":"179","messageId":"180","endLine":13,"endColumn":18},{"ruleId":"177","severity":1,"message":"200","line":7,"column":23,"nodeType":"179","messageId":"180","endLine":7,"endColumn":34},{"ruleId":"177","severity":1,"message":"201","line":7,"column":78,"nodeType":"179","messageId":"180","endLine":7,"endColumn":89},{"ruleId":"177","severity":1,"message":"195","line":8,"column":10,"nodeType":"179","messageId":"180","endLine":8,"endColumn":16},{"ruleId":"177","severity":1,"message":"202","line":10,"column":10,"nodeType":"179","messageId":"180","endLine":10,"endColumn":20},{"ruleId":"177","severity":1,"message":"203","line":13,"column":12,"nodeType":"179","messageId":"180","endLine":13,"endColumn":22},{"ruleId":"177","severity":1,"message":"204","line":13,"column":24,"nodeType":"179","messageId":"180","endLine":13,"endColumn":37},{"ruleId":"177","severity":1,"message":"205","line":5,"column":8,"nodeType":"179","messageId":"180","endLine":5,"endColumn":20},{"ruleId":"173","severity":1,"message":"181","line":16,"column":8,"nodeType":"175","endLine":16,"endColumn":10,"suggestions":"206"},"no-native-reassign",["207"],"no-negated-in-lhs",["208"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["209"],"no-unused-vars","'user' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'book'. Either include it or remove the dependency array.",["210"],"'data' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["211"],"'book' is assigned a value but never used.","'box' is assigned a value but never used.","'box_size' is assigned a value but never used.","'setSize' is assigned a value but never used.","'price' is assigned a value but never used.","'setPrice' is assigned a value but never used.","'location' is assigned a value but never used.","'setLocation' is assigned a value but never used.","'useState' is defined but never used.","'Button' is defined but never used.",["212"],"'jwt_decode' is defined but never used.","'BOOKPAGE_ROUTE' is defined but never used.","'history' is assigned a value but never used.","'ADMIN_ROUTE' is defined but never used.","'LOGIN_ROUTE' is defined but never used.","'useHistory' is defined but never used.","'boxVisible' is assigned a value but never used.","'setBoxVisible' is assigned a value but never used.","'Applications' is defined but never used.",["213"],"no-global-assign","no-unsafe-negation",{"desc":"214","fix":"215"},{"desc":"216","fix":"217"},{"desc":"218","fix":"219"},{"desc":"216","fix":"220"},{"desc":"216","fix":"221"},"Update the dependencies array to be: [user]",{"range":"222","text":"223"},"Update the dependencies array to be: [book]",{"range":"224","text":"225"},"Update the dependencies array to be: [id]",{"range":"226","text":"227"},{"range":"228","text":"225"},{"range":"229","text":"225"},[832,834],"[user]",[568,570],"[book]",[999,1001],"[id]",[788,790],[669,671]]